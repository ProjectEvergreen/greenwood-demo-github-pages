const n=document.createElement("template");n.innerHTML='\n  <style>\n    dialog {\n      border: 1px solid #818181;\n      text-align: center;\n      width: 40%;\n      border-radius: 10px;\n      padding: 2rem 1rem;\n      min-height: 200px;\n      background-color: #fff;\n      overflow-x: hidden;\n    }\n    \n    h3 {\n      font-size: 1.85rem;\n    }\n    \n    button {\n      background: var(--color-accent);\n      color: var(--color-white);\n      padding: 1rem 2rem;\n      border: 0;\n      font-size: 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n    @media(max-width: 768px) {\n      dialog {\n        width: 80%;\n      }\n    }\n  </style>\n  <dialog>\n    <h3 id="content"></h3>\n    <button autofocus>Close</button>\n  </dialog>\n';class e extends HTMLElement{updateModal(n){console.log(`selected item is => ${n.content}`);const e=this.shadowRoot.querySelector("dialog");e.querySelector("#content").textContent=n.content,e.showModal()}connectedCallback(){this.shadowRoot||(this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(n.content.cloneNode(!0))),window.addEventListener("update-modal",(n=>{this.updateModal(n.detail)}));const e=this.shadowRoot.querySelector("dialog");e.querySelector("button").addEventListener("click",(()=>{e.close()}))}}customElements.define("app-modal",e);export{e as default};
//# sourceMappingURL=modal.47ef9dee.js.map
