class n extends HTMLElement{selectItem(){const n=new CustomEvent("update-modal",{detail:{content:`You selected the "${this.title}"`}});window.dispatchEvent(n)}connectedCallback(){if(!this.shadowRoot){const n=this.getAttribute("thumbnail"),t=this.getAttribute("title"),e=document.createElement("template");e.innerHTML=`\n        <style>\n          div {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 0.5rem;\n            border: 1px solid #818181;\n            width: fit-content;\n            border-radius: 10px;\n            padding: 2rem 1rem;\n            height: 680px;\n            justify-content: space-between;\n            background-color: #fff;\n            overflow-x: hidden;\n          }\n          button {\n            background: var(--color-accent);\n            color: var(--color-white);\n            padding: 1rem 2rem;\n            border: 0;\n            font-size: 1rem;\n            border-radius: 5px;\n            cursor: pointer;\n          }\n          img {\n            max-width: 500px;\n            min-width: 500px;\n            width: 100%;\n          }\n          h3 {\n            font-size: 1.85rem;\n          }\n\n          @media(max-width: 768px) {\n            img {\n              max-width: 300px;\n              min-width: 300px;\n            }\n            div {\n              height: 500px;\n            }\n          }\n        </style>\n        <div>\n          <h3>${t}</h3>\n          <img src="${n}" alt="${t}" loading="lazy" width="100%">\n          <button onclick="this.parentNode.parentNode.host.selectItem()">View Item Details</button>\n        </div>\n      `,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(e.content.cloneNode(!0))}}}customElements.define("app-card",n);export{n as default};
//# sourceMappingURL=card.c008a341.js.map
